{
    "Id": "CustomFlickr",
    "BackEnd": "Scriptable",
    "Meta": {
      "Author": "Gayatri Bhosale, One Identity",
      "Description": "Platform script to support Flickr web application, this is tested with SPP version 7.5 and above."
    },
    "CheckPassword": {
      "Parameters": [
        { "Timeout": { "Type": "Integer", "Required": false, "DefaultValue": 30 } },
        { "AccountUserName": { "Type": "String", "Required": true } },
        { "AccountPassword": { "Type": "Secret", "Required": true } } ,
        { "AssetName": { "Type": "String", "Required": false, "DefaultValue": "Flickr" } },
        { "HttpProxyAddress": { "Type": "String", "Description": "HTTP Proxy Address", "Required": false } },
        { "HttpProxyPort": { "Type": "Integer", "Description": "HTTP Proxy Port", "Required": false, "DefaultValue": 443 } },
        { "HttpProxyUserName": { "Type": "String", "Description": "HTTP Proxy UserName", "Required": false } },
        { "HttpProxyPassword": { "Type": "Secret", "Description": "HTTP Proxy Password", "Required": false } }
      ],
      "Do": [
        { "Status": { "Type": "Checking", "Percent": 10, "Message": { "Name": "VerifyingPassword" } } },
        { "Function": { "Name": "CheckAccountLogin", "Parameters": [ "%AccountUserName%", "%AccountPassword%" ], "ResultVariable": "CheckResult" } },
        { "Return": { "Value": "%CheckResult%" } }
      ]
    },
    "ChangePassword": {
      "Parameters": [
        { "Timeout": { "Type": "Integer", "Required": false,  "DefaultValue": 30 } },
        { "AccountUserName": { "Type": "String", "Required": true } },
        { "AccountPassword": { "Type": "Secret", "Required": true } },
        { "NewPassword": { "Type": "Secret", "Required": true } },
        { "AssetName": { "Type": "String", "Required": false, "DefaultValue": "Flickr" } },
        { "HttpProxyAddress": { "Type": "String", "Description": "HTTP Proxy Address", "Required": false } },
        { "HttpProxyPort": { "Type": "Integer", "Description": "HTTP Proxy Port", "Required": false, "DefaultValue": 443 } },
        { "HttpProxyUserName": { "Type": "String", "Description": "HTTP Proxy UserName", "Required": false } },
        { "HttpProxyPassword": { "Type": "Secret", "Description": "HTTP Proxy Password", "Required": false } }
      ],
      "Do": [
        { "Status": { "Type": "Changing", "Percent": 20, "Message": { "Name": "ChangingPassword", "Parameters": [ "%AccountUserName%" ] } } },
        { "Condition": {
          "If": "AccountPassword.Equals(NewPassword)", "Then":
          [
            { "Status": { "Type": "Changing", "Percent": 80, "Message": { "Name": "CurrentAndNewPasswordsAreIdentical", "Parameters": [ "%AccountUserName%" ] } } },
            { "Log": { "Text": "Current and New Password Should Not Be Same." } },
            { "Return": { "Value": false } }
          ]
        }  },
        { "Function": { "Name": "ValidatePassword" , "ResultVariable": "IsPasswordValid" } },
        { "Condition": {
          "If": "!IsPasswordValid",
          "Then": {
            "Do": [
              { "Status": { "Type": "Changing", "Percent": 80, "Message": { "Name": "PasswordCheckFailed", "Parameters": [ "%AccountUserName%" ] } } },
              { "Log": { "Text": "Password does not meet the requirement" } },
              { "Return": { "Value": false } }
            ]
          }
        }  },
        { "Status": { "Type": "Changing", "Percent": 20, "Message": { "Name": "LoggingInToService" } } },
        { "Function": { "Name": "Login", "Parameters": [ "%AccountUserName%", "%AccountPassword%" ], "ResultVariable": "LoginResult" } },
        { "SetItem": { "Name": "Token", "Value": "%{LoginResult.AccessToken}%" } },
        { "Condition": {
            "If": "!(LoginResult.Success)",
            "Then": {
              "Do": [
                { "Status": { "Type": "Changing", "Percent": 70, "Message": { "Name": "LoggingInWithAccountFailed", "Parameters": [ "%AssetName%", "%AccountUserName%" ] } } },
                { "Return": { "Value": false } }
              ]
            }
          }
        },
        { "Try": {
          "Do": [
            { "Function": { "Name": "ChangeUserPassword", "Parameters": ["%AccountPassword%", "%Token%"], "ResultVariable": "CheckResult" } },
            { "Return": { "Value": "%CheckResult%" } }
          ],
          "Catch": [
            { "Throw": { "Value": "Error changing password" } }
          ]
        }  }
      ]
    },
    "Functions": [
      {
        "Name": "CheckAccountLogin",
        "Parameters": [
          { "UserName": { "Type": "String" } },
          { "Password": { "Type": "Secret" } }
        ],
        "Do": [
          { "Status": { "Type": "Checking", "Percent": 20, "Message": { "Name": "LoggingInToService", "Parameters": [ "%AssetName%", "%UserName%" ] } } },
          { "Function": { "Name": "Login", "Parameters": [ "%UserName%", "%Password%" ], "ResultVariable": "LoginResult" } },  
          { "Condition": {
            "If": "!(LoginResult.Success)",
            "Then": {
              "Do": [
                { "Log": { "Text": "Unsuccessful Login" } },
                { "Return": { "Value": "%{LoginResult.Success}%" } }
              ]
            }
          }  },	
          { "Return": { "Value": "%{LoginResult.Success}%" } }
        ]
      },
      {
        "Name": "Login",
        "Parameters": [
          { "UserName": { "Type": "string" } },
          { "Password": { "Type": "secret" } }
        ],
        "Do": [
        // Get Access Token
        { "SetItem" : { 
          "Name" : "AuthRequestBody", 
          "Value" : { 
            "AuthFlow" : "USER_PASSWORD_AUTH", 
            "ClientId" : "3ck15a1ov4f0d3o97vs3tbjb52", 
            "AuthParameters" : {
              "USERNAME": "%UserName%",
              "PASSWORD": "%Password%"
            }, 
            "ClientMetadata": {} 
          }
        }  },
        { "NewHttpRequest": { "ObjectName": "Global:AccessTokenRequest" } },
        { "Headers": {
          "RequestObjectName": "AccessTokenRequest",
          "AddHeaders": {
            "Host": "cognito-idp.us-east-1.amazonaws.com",
            "Cache-Control": "no-cache",
            "ContentType": "application/x-amz-json-1.1",
            "origin": "https://identity.flickr.com",
            "x-amz-target": "AWSCognitoIdentityProviderService.InitiateAuth",
            "x-amz-user-agent": "aws-amplify/0.1.x js"
          }
        }  },
        { "Try":{ 
          "Do": [
            { "Request": {
              "Verb": "Post",
              "Url": "https://cognito-idp.us-east-1.amazonaws.com/",
              "RequestObjectName": "AccessTokenRequest",
              "ResponseObjectName": "Global:AuthResponse", 
              "AllowRedirect": true,
              "Content": {
                "ContentType": "application/x-amz-json-1.1",
                "ContentObjectName": "AuthRequestBody"
              },
              "ProxyIp": "%HttpProxyAddress%",
              "ProxyPort": "%HttpProxyPort%",
              "ProxyUser": "%HttpProxyUserName%",
              "ProxyPassword": "%HttpProxyPassword%"
            }  }
          ],
          "Catch": [
            { "Status": { "Type": "Checking", "Percent": 80, "Message": { "Name": "ConnectionFailed"}, "Parameters": [ "%UserName%", "%Exception%" ] } },
            { "Throw": { "Value": "Error Fetching Token" } }
          ]
        }  },
        { "SetItem": { "Name": "StatusCode", "Value": "%{AuthResponse.StatusCode.ToString()}%" } },
        { "Condition": {
          "If": "StatusCode == \"BadRequest\"",
          "Then": {
            "Do": [
              { "SetItem": { "Name": "ErrorMessage", "Value": "" } },
              { "SetItem": { "Name": "pattern", "Value": "\"message\":\"([^\"]*)\"" } },
              { "SetItem": { "Name": "mainstring", "Value": "%{AuthResponse.Content.ToString()}%" } },
              { "Eval": {"Expression": "ErrorMessage = Regex.Match(mainstring, pattern).Groups[1].Value" } },
              { "Log": { "Text": "Error, %ErrorMessage%" } },
              { "Return": { "Value": false } }
            ]
          }
        }  },
        { "SetItem": { "Name": "AccessToken", "Value": "" } },
        { "SetItem": { "Name": "pattern", "Value": "\"AccessToken\":\"([^\"]*)\"" } },
        { "SetItem": { "Name": "mainstring", "Value": "%{AuthResponse.Content.ToString()}%" } },
        { "Eval": { "Expression": "AccessToken = Regex.Match(mainstring, pattern).Groups[1].Value" } },
        { "Condition": {
          "If": "AccessToken == null",
          "Then": {
            "Do": [
              { "Log": { "Text": "Error, AccessToken not found" } },
              { "Return": { "Value": false } }
            ] 
          }
        }  },

        //Sign in to flickr
        { "NewHttpRequest": { "ObjectName": "Global:LoginGetRequest" } },
        { "Headers": {
          "RequestObjectName": "LoginGetRequest",
          "AddHeaders": {
            "Cache-Control": "no-cache",
            "Host": "www.flickr.com"
          }
        }  },
        { "Try": {
          "Do": [			  
            { "Request": {
              "Verb": "Get",
              "Url": "https://www.flickr.com/signin/auth?data=%AccessToken%&redir=https://www.flickr.com/",
              "SubstitutionInUrl": true,
              "RequestObjectName": "LoginGetRequest",
              "ResponseObjectName": "Global:LoginGetResponse",
              "AllowRedirect": true,
              "ProxyIp": "%HttpProxyAddress%",
              "ProxyPort": "%HttpProxyPort%",
              "ProxyUser": "%HttpProxyUserName%",
              "ProxyPassword": "%HttpProxyPassword%"
            }  }
          ],
          "Catch": [
            { "Status": { "Type": "Checking", "Percent": 80, "Message": { "Name": "LoggingInWithAccountFailed", "Parameters": [ "%AssetName%", "%Exception%" ] } } },
            { "Log": { "Text": "Error, Unsuccessful Login" } },
            { "Throw": { "Value": "Unsuccessful Login" } }
          ]
        }  },
        { "SetItem": { "Name": "StatusCode", "Value": "%{LoginGetResponse.StatusCode.ToString()}%" } },
          { "Condition": {
            "If": "StatusCode != \"OK\"",
            "Then": {
              "Do": [
                { "Log": { "Text": "Unsuccessful Login" } },
                { "Return": { "Value": false } }
              ]
            }
          }   },
          { "Condition": {
            "If": "StatusCode == \"OK\"",
            "Then": {
              "Do": [
                { "Log": { "Text": "Authentication successful" } },
                { "Return": { "Value": { "Success": true, "AccessToken": "%AccessToken%" } } }
              ]
            }
          }  },
          { "Status": { "Type": "Checking", "Percent": 80, "Message": { "Name": "LoggingInWithAccountFailed", "Parameters": [ "%UserName%" ] } } },
          { "Return": { "Value": false } }
        ]
      },

      // Change password
      {
        "Name": "ChangeUserPassword",
        "Parameters": [
          { "CurrentPassword": { "Type": "secret" } },
          { "Token": { "Type": "String" } }
        ],
        "Do": [
          { "SetItem" : { 
            "Name" : "AuthRequestBody", 
            "Value" : { 
              "PreviousPassword": "%CurrentPassword%",
              "ProposedPassword": "%NewPassword%",
              "AccessToken" : "%Token%"
            }
          }  },
          { "NewHttpRequest": { "ObjectName": "Global:ChangePasswordPostReqeuest" } },
          { "Headers": {
            "RequestObjectName": "ChangePasswordPostReqeuest",
            "AddHeaders": {
              "Host": "cognito-idp.us-east-1.amazonaws.com",
              "Cache-Control": "no-cache",
              "ContentType": "application/x-amz-json-1.1",
              "origin": "https://identity.flickr.com",
              "x-amz-target": "AWSCognitoIdentityProviderService.ChangePassword",
              "x-amz-user-agent": "aws-amplify/0.1.x js"
            }
          }  },
          { "Try":{ 
            "Do": [
              { "Request": {
                "Verb": "Post",
                "Url": "https://cognito-idp.us-east-1.amazonaws.com/",
                "RequestObjectName": "ChangePasswordPostReqeuest",
                "ResponseObjectName": "Global:ChangePasswordPostResponse", 
                "AllowRedirect": false,
                  "Content": {
                    "ContentType": "application/x-amz-json-1.1",
                    "ContentObjectName": "AuthRequestBody"
                  },
                  "ProxyIp": "%HttpProxyAddress%",
                  "ProxyPort": "%HttpProxyPort%",
                  "ProxyUser": "%HttpProxyUserName%",
                  "ProxyPassword": "%HttpProxyPassword%"
              }  }
            ],
            "Catch": [
              { "Status": { "Type": "Checking", "Percent": 80, "Message": { "Name": "ConnectionFailed"}, "Parameters": [ "%UserName%", "%Exception%" ] } },
              { "Log": { "Text": "Failed to change password" } },
              { "Throw": { "Value": "Failed to change password" } }
            ]
          }  },

          // New password testing
          { "Function": { "Name": "Login", "Parameters": [ "%AccountUserName%", "%NewPassword%" ], "ResultVariable": "LoginResult" } },
          { "Condition": {
            "If": "!(LoginResult.Success)",
            "Then": {
              "Do": [
                { "Log": { "Text": "Error, Unsuccessful Login" } }
              ]
            },
            "Else":{
              "Do": [
                { "Return": { "Value": true } }
              ]
            }
          }  },       
          { "Return": { "Value": "%{LoginResult.Success}%" } }
        ]
      },
      { 
        "Name": "ValidatePassword",
        "Do": [
          { "UrlEncode": {
            "Source": "%NewPassword%",
            "ResultVariable": "EncodedNewPassword"
          }  },
          {
            "Try":{
              "Do": [
                { "Condition": {
                  "If": "EncodedNewPassword.Length < 12",
                  "Then": {
                    "Do": [
                      { "Log": { "Text": "Password must be at least 12 characters long." } },
                      { "Return": { "Value": false } }
                    ]
                  }
                }  },
                { "Condition": {
                  "If": "Regex.IsMatch(EncodedNewPassword, '^\\s')",
                  "Then": {
                    "Do": [
                      { "Log": { "Text": "Password must not contain any leading spaces" } },
                      { "Return": { "Value": false } }
                    ]
                  }
                }  },
                { "Return": { "Value": true } }
              ],
              "Catch": [
                { "Log": { "Text": "An error occurred while validating the password: %Exception%" } },
                { "Throw": { "Value": "Failed to validate password" } }
              ]
            }
          }
        ]
      }
    ]
}
 